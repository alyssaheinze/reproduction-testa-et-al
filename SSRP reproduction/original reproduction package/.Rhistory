table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2)
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*Partisanship, data = coded_df_des_2, render.categorical=my.render.cat)
#gender * race
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*non_white, data = coded_df_des_2)
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2)
render.continuous=c(.="Mean (SD)")
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render.continuous)
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos   = "Mean (SD)",
dv2_unconditional_neg   = "Mean (SD)",
dv3_due_process   = "Mean (SD)",
dv4_perso_exp   = "Mean (SD)",
dv5_conditional_pos   = "Mean (SD)",
dv6_disbelief   = "Mean (SD)",
dv7_attitudes   = "Mean (SD)")
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render=rndr)
table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render=rndr)
table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render.continuous="Mean (SD)")
#Descriptives Set-up
#install.packages("gtsummary")
#install.packages("table1")
library(gtsummary)
library(readr)
library(dplyr)
library(stargazer)
library(table1)
#Subset coded_df for summary table
#For the original text analysis variables
#Delete non-binary subjects
coded_df2<-subset(coded_df, gender!=2 & gender!=4)
coded_df_des_1 <- (coded_df2 %>% select(gender, dv_response01))
coded_df_des <- na.omit(coded_df2 %>% select(gender,	dv_response_length, dv1_unconditional_pos, dv2_unconditional_neg,	dv3_due_process,	dv4_perso_exp,	dv5_conditional_pos,	dv6_disbelief,	dv7_attitudes))
coded_df_des_2 <- na.omit(coded_df2 %>% select(gender, Partisanship, age, education, non_white,	dv_response_length, dv1_unconditional_pos, dv2_unconditional_neg,	dv3_due_process,	dv4_perso_exp,	dv5_conditional_pos,	dv6_disbelief,	dv7_attitudes))
#Summarize aggregate manual coding
text_des_1 <- coded_df_des_1 %>%
tbl_summary(by = gender,
label = list(dv_response01 ~ "Response (Yes/No)"),
missing_text = "(NA)") %>%
add_overall() %>%
modify_caption("**Response by Gender**") %>%
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_2 <- coded_df_des %>%
tbl_summary(by = gender,
label = list(dv_response_length ~ "Response Length",
dv1_unconditional_pos ~ "Unconditional Positive",
dv2_unconditional_neg	~ "Unconditional Negative",
dv3_due_process	~ "Due Process",
dv4_perso_exp	~ "Personal Experience",
dv5_conditional_pos	~ "Conditional Positive",
dv6_disbelief	~ "Disbelief",
dv7_attitudes ~ "Attitudes"),
missing_text = "(NA)") %>%
add_overall() %>%
modify_caption("**Response Type by Gender**") %>%
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_1
text_des_2
#Save tables as images
gt::gtsave(as_gt(text_des_1), file = file.path("text_des_1.png"))
gt::gtsave(as_gt(text_des_2), file = file.path("text_des_2.png"))
#Combining subsets, gender * Partisanship
#Table labels
coded_df_des_2$gender <-
factor(coded_df_des_2$gender, levels=c(0,1),
labels=c("Male",
"Female"))
label(coded_df_des_2$Partisanship) <- "Partisanship"
label(coded_df_des_2$gender) <- "Gender"
label(coded_df_des_2$non_white) <- "Race"
label(coded_df_des_2$dv_response_length) <- "Response Length"
label(coded_df_des_2$dv1_unconditional_pos) <- "Unconditional Positive"
label(coded_df_des_2$dv2_unconditional_neg)	<- "Unconditional Negative"
label(coded_df_des_2$dv3_due_process)	<- "Due Process"
label(coded_df_des_2$dv4_perso_exp)	<- "Personal Experience"
label(coded_df_des_2$dv5_conditional_pos)	<- "Conditional Positive"
label(coded_df_des_2$dv6_disbelief)	<- "Disbelief"
label(coded_df_des_2$dv7_attitudes) <- "Attitudes"
#only gender
table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render.continuous="Mean (SD)")
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*Partisanship, data = coded_df_des_2)
#gender * race
table1::table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*non_white, data = coded_df_des_2)
text_des_1 <- coded_df_des_1 %>%
tbl_summary(by = gender,
label = list(dv_response01 ~ "Response (Yes/No)"),
missing_text = "(NA)") %>%
add_overall() %>%
modify_caption("**Response by Gender**") %>%
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_2 <- coded_df_des %>%
tbl_summary(by = gender,
label = list(dv_response_length ~ "Response Length",
dv1_unconditional_pos ~ "Unconditional Positive",
dv2_unconditional_neg	~ "Unconditional Negative",
dv3_due_process	~ "Due Process",
dv4_perso_exp	~ "Personal Experience",
dv5_conditional_pos	~ "Conditional Positive",
dv6_disbelief	~ "Disbelief",
dv7_attitudes ~ "Attitudes"),
missing_text = "(NA)") %>%
add_overall() %>%
modify_caption("**Response Type by Gender**") %>%
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_2 <- coded_df_des %>%
tbl_summary(by = gender,
label = list(dv_response_length ~ "Response Length",
dv1_unconditional_pos ~ "Unconditional Positive",
dv2_unconditional_neg	~ "Unconditional Negative",
dv3_due_process	~ "Due Process",
dv4_perso_exp	~ "Personal Experience",
dv5_conditional_pos	~ "Conditional Positive",
dv6_disbelief	~ "Disbelief",
dv7_attitudes ~ "Attitudes"),
missing_text = "(NA)") %>%
add_overall() %>%
modify_caption("**Response Type by Gender**") %>%
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_1
coded_df_des_1 <- (coded_df2 %>% select(gender, dv_response01, dv_response_length))
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_1 <- coded_df_des_1 %>%
tbl_summary(by = gender,
label = list(dv_response01 ~ "Response (Yes/No)", dv_response_length ~ "Response Length"),
missing_text = "(NA)") %>%
add_overall() %>%
modify_caption("**Response by Gender**") %>%
modify_header(stat_1 = "**Male**", stat_2 = "**Female**")
text_des_1
coded_df_des_1$gender <-
factor(coded_df_des_1$gender, levels=c(0,1),
labels=c("Male",
"Female"))
coded_df_des_1$dv_response01 <-
factor(coded_df_des_1$dv_response01, levels=c(0,1),
labels=c("No",
"Yes"))
label(coded_df_des_1$gender) <- "Gender"
label(coded_df_des_1$dv_response_length) <- "Response Length"
label(coded_df_des_1$dv_response) <- "Response (Yes/No)"
label(coded_df_des_1$dv_response01) <- "Response (Yes/No)"
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render="Mean (SD)")
table1 <- table1(~ dv_response01 + dv_response_length | gender, data = coded_df_des_1, render="Mean (SD)")
table1 <- table1(~ dv_response01 + dv_response_length | gender, data = coded_df_des_1)
table1
knitr::kable(table1)
table1
knitr::kable(table1, caption = "Responses by Gender")
table1
table1 <- table1(~ dv_response01 + dv_response_length | gender, data = coded_df_des_1, caption = "Text Response by Gender")
table1
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr)
table2
rndr <- function(x, name, ...) {
with(stats.apply.rounding(stats.default(x), digits=2))
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr)
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2))
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr)
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr)
table2
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr, digits = 2)
table2
my.render.cont <- function(x) {
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)"=sprintf("%s (&plusmn; %s)", MEAN, SD)))
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr, render.continuous = my.render.cont)
table2
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr, render.continuous = my.render.cont)
table2
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x),
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)"=sprintf("%s (&plusmn; %s)", MEAN, SD)))
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render= rndr)
table2
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2)
table2
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)"=sprintf("%s (&plusmn; %s)", MEAN, SD)))
}
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)", MEAN, SD)))
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)", MEAN, SD))
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render = rndr)
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)", MEAN, SD))
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render = rndr)
table2
rndr <- function(x, name, ...) {
if (!is.numeric(x)) return(render.categorical.default(x))
what <- switch(name,
dv1_unconditional_pos  = "Mean (SD)")
parse.abbrev.render.code(c("", what))(x)
with(stats.apply.rounding(stats.default(x), digits=2), c("",
"Mean (SD)"=sprintf("%s (&plusmn; %s)", MEAN, SD)))
}
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render = rndr)
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render = rndr)
table2
table1 <- table1(~ dv_response01 + dv_response_length | gender, data = coded_df_des_1, caption = "Who Responds? (by Gender)")
table1
table1
table3 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*Partisanship, data = coded_df_des_2, caption = "How do They Respond? (by Gender)")
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render = rndr, caption = "How do They Respond? (by Gender)")
table2
table3 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*Partisanship, data = coded_df_des_2,render = rndr, caption = "How do They Respond? (by Gender and Partisanship)")
table3
table4 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*non_white, data = coded_df_des_2, render = rndr, caption = "How do They Respond? (by Gender and Race)")
table4
coded_df_des_2$non_white<-
factor(coded_df_des_2$non_white, levels=c(0,1),
labels=c("White",
"Non White"))
table2 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender, data = coded_df_des_2, render = rndr, caption = "How do They Respond? (by Gender)")
table4 <- table1(~ dv_response_length + dv1_unconditional_pos + dv2_unconditional_neg +	dv3_due_process +	dv4_perso_exp +	dv5_conditional_pos +	dv6_disbelief +	dv7_attitudes | gender*non_white, data = coded_df_des_2, render = rndr, caption = "How do They Respond? (by Gender and Race)")
table4
# First we load in the data
load(file = "df_mtg.rda")
# First we load in the data
load(file = "ps231b_reproduction_group4\SSRP reproduction\original reproduction packagedf_mtg.rda")
# First we load in the data
load(file = "ps231b_reproduction_group4/SSRP reproduction/original reproduction package/df_mtg.rda")
# First we load in the data
load(file = "df_mtg.rda")
#| include: false
#| warning: false
#| message: false
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(knitr)
library(numDeriv)
library(purrr)
library(rlang)
# first let's write a function for the ATE
ate <- function(outcome, treatment){
## first get rid of non-missing observations
treatment <- treatment[!is.na(outcome)]
outcome <- outcome[!is.na(outcome)]
## then add treated and untreated vectors
treated <- outcome[treatment == 1]
not_treated <- outcome[treatment == 0]
## the number of observations in each category
N1 <- length(na.omit(treated))
N0 <- length(na.omit(not_treated))
## Calculate the difference in means
mean_treated <- mean(treated)
mean_control <- mean(not_treated)
ate <- mean_treated - mean_control
## Standard Error Calculation
## Use the usual Neyman Approximation
var1 <- sum((treated - mean(treated))^2) / (N1 - 1)
var0 <- sum((not_treated - mean(not_treated))^2) / (N0 - 1)
## Take sqrt to get SE
se_ate <- sqrt(var1/N1 + var0/N0)
## Degree of Freedom calculation
df_numerator <- (var1/N1 + var0/N0)^2
df_denominator <- (var1^2/(N1^2*(N1-1))) + (var0^2/(N0^2*(N0-1)))
degrees_free <- df_numerator/df_denominator
## Now plug it in with the inverse
## cdf of the t-distribution qt(x, df)
lwr_bound <- ate - qt(.975, degrees_free)*se_ate
upp_bound <- ate + qt(.975, degrees_free)*se_ate
## give the output for the ATE
return(c(ATE = ate,
lwr_bound = lwr_bound,
upp_bound = upp_bound))
}
get_acte <- function(df = df, z = c("Selection", "Control")){
#weighted variance function
weighted.var <- function(x, w, na.rm = TRUE) {
# https://seismo.berkeley.edu/~kirchner/Toolkits/Toolkit_12.pdf
if (na.rm) {
i <- !is.na(x)
w <- w[i]
x <- x[i]
}
sum.w <- sum(w)
sum.w2 <- sum(w^2)
mean.w <- sum(x * w) / sum(w)
part1 <- (sum(w*x^2, na.rm = T)/sum.w)-mean.w^2
part2 <- sum.w2/(sum.w^2 - sum.w2)
part1*part2
}
#include weights
Ns <- df |>
mutate(n_c = if_else(C == "Choice",1,0),
n_avoid = if_else(C == "Choice"&
avoid01 ==1,1,0),
n_select = if_else(C == "Choice"&
avoid01 == 0, 1,0),
n_control = if_else(D_ch == "Control",1,0),
## Deal with the NAs to not worry about them
## in the next step
n_control = if_else(is.na(n_control),
0, n_control)) |>
summarise(
n_c = sum(n_c),
n_avoid = sum(n_avoid),
n_select = sum(n_select),
n_control = sum(n_control))
weight <- Ns |>
summarise(select_weights = 1/(n_select/n_c),
avoid_weights = 1/(n_control/n_avoid))
acte_weights <- df |>
mutate(weights = case_when(
C=="Choice" & avoid01 == 0 & D_ch == "Control"~ weight$select_weights,
C=="Choice" & avoid01 == 1 & D_ch == "Control"~ weight$avoid_weights,
TRUE ~ 1)
)
### Get weighted means and weighted SEs
weighted_means_sds <- acte_weights |>
filter(!is.na(treatment),
!is.na(dv_pca_metoo)) |>
group_by(treatment) |>
summarise(avg = sum(weights*dv_pca_metoo,
na.rm = T)/sum(weights, na.rm =T),
se = weighted.var(dv_pca_metoo,
weights, na.rm = T))
## Get the first part of the expression and its SE
## This is just the mean and se for the select01 group
y_select <- df |>
filter(C == "Choice") |>
summarise(avg = mean(select01),
se = sd(select01)/sqrt(n()))
### Delta Method
avg_x <- weighted_means_sds %>%
# filter(treatment != "Treatment")%>%
# summarise(diff = sum(abs(avg)))%>%
summarise(diff = avg[treatment == z[1]] - avg[treatment == z[2]]) %>%
pull()
x_se <- weighted_means_sds %>%
# filter(treatment != "Treatment")%>%
# summarise(se = sqrt(sum(se)))%>%
summarise(se = sqrt(sum(se[treatment == z[1]], se[treatment == z[2]]))) %>%
pull()
denom <- ifelse(z[1] == "Selection", y_select$avg, 1-y_select$avg)
# estimate <- avg_x /y_select$avg
estimate <- avg_x / denom
## function that we seek to estimate
## pass this to the jacobian function which calculates the gradient
ratio <- function(x){
x[1]/x[2]
}
## Variance covariance matrix
vcov <- diag(c(x_se,y_select$se)^2)
## this function by default will output this in
## transpose form, so take the transpose to match
## discussion above
# grad_g <- t(numDeriv::jacobian(func = ratio, c(avg_x, y_select$avg)))
grad_g <- t(numDeriv::jacobian(func = ratio, c(avg_x, denom)))
se_b <- sqrt(t(grad_g) %*% vcov %*%grad_g)
lwr_b = estimate - qnorm(.975)*se_b
upp_b = estimate + qnorm(.975)*se_b
### SIDE: ALTERNATIVE FUNCTION DELTA METHOD
# mvec <- c(x=avg_x, y=denom)
# est <- car::deltaMethod(mvec,"x/y",vcov,level=.95)
round(c(estimate = estimate, lwr_b = lwr_b, upp_b = upp_b),2)
}
#let's redefine the ate function but call it CACTE
cacte <- function(outcome, treatment){
## first get rid of non-missing observations
treatment <- treatment[!is.na(outcome)]
outcome <- outcome[!is.na(outcome)]
## then add treated and untreated vectors
treated <- outcome[treatment == 1]
not_treated <- outcome[treatment == 0]
## the number of observations in each category
N1 <- length(na.omit(treated))
N0 <- length(na.omit(not_treated))
## Calculate the difference in means
mean_treated <- mean(treated)
mean_control <- mean(not_treated)
ate <- mean_treated - mean_control
## Standard Error Calculation
## Use the usual Neyman Approximation
var1 <- sum((treated - mean(treated))^2) / (N1 - 1)
var0 <- sum((not_treated - mean(not_treated))^2) / (N0 - 1)
## Take sqrt to get SE
se_ate <- sqrt(var1/N1 + var0/N0)
## Degree of Freedom calculation
df_numerator <- (var1/N1 + var0/N0)^2
df_denominator <- (var1^2/(N1^2*(N1-1))) + (var0^2/(N0^2*(N0-1)))
degrees_free <- df_numerator/df_denominator
## Now plug it in with the inverse
## cdf of the t-distribution qt(x, df)
lwr_bound <- ate - qt(.975, degrees_free)*se_ate
upp_bound <- ate + qt(.975, degrees_free)*se_ate
## give the output for the ATE
return(c(CACTE = ate,
lwr_bound = lwr_bound,
upp_bound = upp_bound))
}
# First we load in the data
load(file = "df_mtg.rda")
# First we load in the data
df_mtg <- readRDA("/SSRP reproduction/original reproduction package/df_mtg.rda")
setwd("~/GitHub/ps231b_reproduction_group4/SSRP reproduction/original reproduction package")
# First we load in the data
load(file = "df_mtg.rda")
# First we load in the data
load(file = "df_mtg.RDA")
load("~/GitHub/ps231b_reproduction_group4/SSRP reproduction/original reproduction package/df_mtg.rda")
# First we load in the data
load("~/ps231b_reproduction_group4/SSRP reproduction/original reproduction package/df_mtg.rda")
# First we load in the data
load("~/GitHub/ps231b_reproduction_group4/SSRP reproduction/original reproduction package/df_mtg.rda")
# First we load in the data
load("~/GitHub/ps231b_reproduction_group4/SSRP reproduction/original reproduction package/df_mtg.rda")
## Overall
overall <- df_mtg |>
filter(C == "Experiment") |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
## Men
men <- df_mtg |>
filter(C == "Experiment", gender == 0) |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
## women
women <- df_mtg |>
filter(C == "Experiment", gender == 1) |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
## Republicans
reps <- df_mtg |>
filter(C == "Experiment",
Partisanship == "Republicans") |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
## Democrats
dems <- df_mtg |>
filter(C == "Experiment",
Partisanship == "Democrats") |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
## White
whites <- df_mtg |>
filter(C == "Experiment",
non_white == 0) |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
## Non-white
nonwhites <- df_mtg |>
filter(C == "Experiment",
non_white == 1) |>
select(dv_pca_metoo, treatment) |>
mutate(treatment = if_else(treatment == "Control",
0, 1))
